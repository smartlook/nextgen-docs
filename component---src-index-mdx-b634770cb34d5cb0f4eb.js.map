{"version":3,"sources":["webpack:///../src/index.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","visibleOn","markup","snippets","android","xml","java","c","ios","swift","kind","javascript","to","platform","src","smartlook","isMDXComponent"],"mappings":"kiBASO,IAAMA,EAAe,Q,+LAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAK5E,iBAAQ,CACN,GAAM,oBADR,oBAGA,YAAC,IAAD,CAAIC,UAAU,UAAUC,OAAM,6CAM/BF,QAAQ,OACP,YAAC,IAAD,CAAIC,UAAU,MAAMC,OAAM,yCAM3BF,QAAQ,OACP,iBAAQ,CACN,GAAM,qBADR,qBAGA,YAAC,IAAD,CAAWG,SAAU,CACnBC,QAAS,CACPC,IAAK,yXAMLC,KAAM,uBAGNC,EAAG,uBAILC,IAAK,CACH,8CAGAC,MAAO,8KAMRT,QAAQ,cACX,YAAC,IAAD,CAAWG,SAAU,CACnBC,QAAS,CACPC,IAAK,yXAMLC,KAAM,uBAGNC,EAAG,uBAILC,IAAK,CACH,8CAGAC,MAAO,8KAMRT,QAAQ,cACX,iBAAQ,CACN,GAAM,qBADR,qBAGA,YAAC,IAAD,CAAWC,UAAU,UAAUD,QAAQ,aAAvC,4NAoBA,YAAC,IAAD,CAAWU,KAAK,OAAOT,UAAU,eAAeD,QAAQ,aAAxD,gLAkBA,iBAAQ,CACN,GAAM,iBADR,iBAGA,YAAC,IAAD,CAAOU,KAAK,OAAOT,UAAU,UAAUD,QAAQ,SAA/C,cAGA,YAAC,IAAD,CAAOU,KAAK,YAAYT,UAAU,UAAUD,QAAQ,SAApD,mBAGA,YAAC,IAAD,CAAOU,KAAK,UAAUT,UAAU,UAAUD,QAAQ,SAAlD,iBAGA,YAAC,IAAD,CAAOU,KAAK,UAAUV,QAAQ,SAA9B,sCAEF,YAAC,IAAD,CAAWG,SAAU,CACfC,QAAS,CACPC,IAAK,mYAMLC,KAAM,2BAGNC,EAAG,2BAILC,IAAK,CACH,kDAGAC,MAAO,sLAMRT,QAAQ,eAEb,iBAAQ,CACN,GAAM,gCADR,gCAGA,YAAC,IAAD,CAAMG,SAAU,CACdE,IAAK,mXAMLM,WAAY,iBAGZJ,EAAG,iBAGFP,QAAQ,SACX,iBAAQ,CACN,GAAM,QADR,QAGA,oDACA,YAAC,IAAD,CAAMY,GAAG,IAAIZ,QAAQ,QAArB,iBACA,4CACA,YAAC,IAAD,CAAMY,GAAG,IAAIC,SAAS,MAAMb,QAAQ,QAApC,mBACA,iBAAQ,CACN,GAAM,SADR,SAGA,mBAAKc,IAAKC,Y,6LAKdlB,EAAWmB,gBAAiB","file":"component---src-index-mdx-b634770cb34d5cb0f4eb.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/nextgen-docs/nextgen-docs/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Code, CodeBlock, TextBlock, Alert, Link, MD } from \"components\";\nimport { usePlatforms } from 'hooks';\nimport smartlook from 'assets/smartlook_logo.svg';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n    <h1 {...{\n      \"id\": \"runtime-markdown\"\n    }}>{`Runtime markdown`}</h1>\n    <MD visibleOn=\"android\" markup={`\n## andorid\n\\n\nstring\n\\n\n__string__\n`} mdxType=\"MD\" />\n    <MD visibleOn=\"ios\" markup={`\n## ios\n\\n\nstring\n\\n\n__string__\n`} mdxType=\"MD\" />\n    <h1 {...{\n      \"id\": \"codeblock-example\"\n    }}>{`CodeBlock Example`}</h1>\n    <CodeBlock snippets={{\n      android: {\n        xml: `\nSmartlook.setGlobalEventProperties(JSONObject globalEventProperties, boolean immutable)\nSmartlook.setGlobalEventProperties(Bundle globalEventProperties, boolean immutable)\nSmartlook.setGlobalEventProperties(String globalEventPropertiesJsonString, boolean immutable)\nSmartlook.setGlobalEventProperty(@NotNull String key, @NotNull String value, boolean immutable)\n      `,\n        java: `\njs snippet\n      `,\n        c: `\nc snippet\n      `\n      },\n      ios: {\n        \"objective-c\": `\nobjective-c snippet\n      `,\n        swift: `\nSmartlook.startRecording() // start or resume paused recording\nSmartlook.stopRecording()  // pause recording\nSmartlook.isRecording()    // returns true/false\n      `\n      }\n    }} mdxType=\"CodeBlock\" />\n    <CodeBlock snippets={{\n      android: {\n        xml: `\nSmartlook.setGlobalEventProperties(JSONObject globalEventProperties, boolean immutable)\nSmartlook.setGlobalEventProperties(Bundle globalEventProperties, boolean immutable)\nSmartlook.setGlobalEventProperties(String globalEventPropertiesJsonString, boolean immutable)\nSmartlook.setGlobalEventProperty(@NotNull String key, @NotNull String value, boolean immutable)\n      `,\n        java: `\njs snippet\n      `,\n        c: `\nc snippet\n      `\n      },\n      ios: {\n        \"objective-c\": `\nobjective-c snippet\n      `,\n        swift: `\nSmartlook.startRecording() // start or resume paused recording\nSmartlook.stopRecording()  // pause recording\nSmartlook.isRecording()    // returns true/false\n      `\n      }\n    }} mdxType=\"CodeBlock\" />\n    <h1 {...{\n      \"id\": \"textblock-example\"\n    }}>{`TextBlock Example`}</h1>\n    <TextBlock visibleOn=\"android\" mdxType=\"TextBlock\">\n      {`\n  # Heading\n  \\n\n  Paragraph\n  \\n\n  <CodeBlock\n    snippets={{\n      android: {\n        xml: \\`\n          xml snippet\n        \\`,\n        java: \\`\n          java snippet\n        \\`,\n      }\n    }}\n  />\n`}\n    </TextBlock>\n    <TextBlock kind=\"note\" visibleOn=\"android, ios\" mdxType=\"TextBlock\">\n      {`\n  # Heading\n  \\n\n  Paragraph\n  \\n\n  <Code\n    snippets={{\n      xml: \\`\n        xml snippet\n      \\`,\n      java: \\`\n        java snippet\n      \\`,\n    }}\n  />\n`}\n    </TextBlock>\n    <h1 {...{\n      \"id\": \"alert-example\"\n    }}>{`Alert Example`}</h1>\n    <Alert kind=\"note\" visibleOn=\"android\" mdxType=\"Alert\">\n  Note Alert\n    </Alert>\n    <Alert kind=\"important\" visibleOn=\"android\" mdxType=\"Alert\">\n  Important Alert\n    </Alert>\n    <Alert kind=\"example\" visibleOn=\"android\" mdxType=\"Alert\">\n  Example Alert\n    </Alert>\n    <Alert kind=\"example\" mdxType=\"Alert\">\n  Example Alert with CodeBlock inside\n  <CodeBlock snippets={{\n        android: {\n          xml: `\n  Smartlook.setGlobalEventProperties(JSONObject globalEventProperties, boolean immutable)\n  Smartlook.setGlobalEventProperties(Bundle globalEventProperties, boolean immutable)\n  Smartlook.setGlobalEventProperties(String globalEventPropertiesJsonString, boolean immutable)\n  Smartlook.setGlobalEventProperty(@NotNull String key, @NotNull String value, boolean immutable)\n        `,\n          java: `\n  js snippet\n        `,\n          c: `\n  c snippet\n        `\n        },\n        ios: {\n          \"objective-c\": `\n  objective-c snippet\n        `,\n          swift: `\n  Smartlook.startRecording() // start or resume paused recording\n  Smartlook.stopRecording()  // pause recording\n  Smartlook.isRecording()    // returns true/false\n        `\n        }\n      }} mdxType=\"CodeBlock\" />\n    </Alert>\n    <h1 {...{\n      \"id\": \"code-independent-of-platform\"\n    }}>{`Code independent of platform`}</h1>\n    <Code snippets={{\n      xml: `\nSmartlook.setGlobalEventProperties(JSONObject globalEventProperties, boolean immutable)\nSmartlook.setGlobalEventProperties(Bundle globalEventProperties, boolean immutable)\nSmartlook.setGlobalEventProperties(String globalEventPropertiesJsonString, boolean immutable)\nSmartlook.setGlobalEventProperty(@NotNull String key, @NotNull String value, boolean immutable)\n`,\n      javascript: `\njs snippet\n`,\n      c: `\nc snippet\n`\n    }} mdxType=\"Code\" />\n    <h1 {...{\n      \"id\": \"link\"\n    }}>{`Link`}</h1>\n    <p>{`keeps the selected platform`}</p>\n    <Link to=\"/\" mdxType=\"Link\">Keep platform</Link>\n    <p>{`switch the platform`}</p>\n    <Link to=\"/\" platform=\"ios\" mdxType=\"Link\">Switch platform</Link>\n    <h1 {...{\n      \"id\": \"image\"\n    }}>{`Image`}</h1>\n    <img src={smartlook} />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}