{"version":3,"sources":["webpack:///../src/conceptual/installation.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"4fAOO,IAAMA,EAAe,Q,iNAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,gBADR,gBAGA,qBAAG,kBAAIC,WAAW,KAAf,oIACH,+KACA,oLACA,qBAAG,kBAAIA,WAAW,KAAf,aACH,sBACE,kBAAIA,WAAW,MAAf,kBACA,kBAAIA,WAAW,MAAf,iCACA,kBAAIA,WAAW,MAAf,6CACA,kBAAIA,WAAW,MAAf,6DACA,kBAAIA,WAAW,MAAf,mDACA,kBAAIA,WAAW,MAAf,kDACA,kBAAIA,WAAW,MAAf,cACA,kBAAIA,WAAW,MAAf,aACA,kBAAIA,WAAW,MAAf,oBACA,kBAAIA,WAAW,MAAf,eACA,kBAAIA,WAAW,MAAf,qBACA,kBAAIA,WAAW,MAAf,sB,+MAMNJ,EAAWK,gBAAiB","file":"component---src-conceptual-installation-mdx-a440eeb664db19fe7aa8.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/nextgen-docs/nextgen-docs/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { CodeBlock } from \"components/CodeBlock\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"installation\"\n    }}>{`Installation`}</h1>\n    <p><em parentName=\"p\">{`This section covers the SDK installation in various environments. Initializing recording is then described in the next chapter.`}</em></p>\n    <p>{`Smartlook SDK is a native software library. It could be either installed as such, or packaged for easy integration with various development platforms.`}</p>\n    <p>{`The installation thus depends on the toolkit with which is your app developed, and on packaging system your project uses to maintain external dependencies:`}</p>\n    <p><em parentName=\"p\">{`links to`}</em></p>\n    <ul>\n      <li parentName=\"ul\">{`native iOS app`}</li>\n      <li parentName=\"ul\">{`native iOS app with Cocoapods`}</li>\n      <li parentName=\"ul\">{`native iOS app with Swift Package Manager`}</li>\n      <li parentName=\"ul\">{`native iOS app with interface made exclusively with Metal`}</li>\n      <li parentName=\"ul\">{`native iOS game using SprintKit, SceneKitâ€¦ etc.`}</li>\n      <li parentName=\"ul\">{`native Android app (perhaps more options, too)`}</li>\n      <li parentName=\"ul\">{`Unreal app`}</li>\n      <li parentName=\"ul\">{`Unity app`}</li>\n      <li parentName=\"ul\">{`React Native app`}</li>\n      <li parentName=\"ul\">{`Xamarin app`}</li>\n      <li parentName=\"ul\">{`Cordova/Ionic app`}</li>\n      <li parentName=\"ul\">{`Flutter app`}</li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}