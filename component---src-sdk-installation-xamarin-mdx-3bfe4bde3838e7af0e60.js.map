{"version":3,"sources":["webpack:///../src/sdk-installation/xamarin.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","snippets","csharp","kind","invisibleOn","isMDXComponent"],"mappings":"ygBAQO,IAAMA,EAAe,Q,kNAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,WADR,WAGA,mEAAkD,mBAAGC,WAAW,KAAQ,CACpE,KAAQ,8CADsC,SAAlD,+CAGA,iBAAQ,CACN,GAAM,eADR,eAGA,qHAAoG,mBAAGA,WAAW,KAAQ,CACtH,KAAQ,gDADwF,uBAApG,KAGA,+EAA8D,0BAAYA,WAAW,KAAvB,uBAA9D,iFACA,6JAA4I,0BAAYA,WAAW,KAAvB,gBAA5I,MAA2M,0BAAYA,WAAW,KAAvB,qBAA3M,cAAuR,0BAAYA,WAAW,KAAvB,eAAvR,UAAyV,0BAAYA,WAAW,KAAvB,YAAzV,MACA,YAAC,IAAD,CAAMC,SAAU,CACdC,OAAQ,mGAOPH,QAAQ,SACX,gHACA,8DACA,YAAC,IAAD,CAAOI,KAAK,OAAOC,YAAY,GAAGL,QAAQ,SAA1C,qKAGA,yDACA,sBACE,kBAAIC,WAAW,MAAf,4BACA,kBAAIA,WAAW,MAAf,qDACA,kBAAIA,WAAW,MAAf,oDACA,kBAAIA,WAAW,MAAf,2CACA,kBAAIA,WAAW,MAAf,wCACA,kBAAIA,WAAW,MAAf,mBAEF,kEAAiD,mBAAGA,WAAW,KAAQ,CACnE,KAAQ,iDADqC,2BAAjD,W,gNAOJJ,EAAWS,gBAAiB","file":"component---src-sdk-installation-xamarin-mdx-3bfe4bde3838e7af0e60.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/nextgen-docs/nextgen-docs/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Code, CodeBlock, TextBlock, Alert, Link } from \"components\";\nimport { usePlatforms } from 'hooks';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"xamarin\"\n    }}>{`Xamarin`}</h1>\n    <p>{`Smartlook SDK is provided in the form of a `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.nuget.org/packages/Smartlook/\"\n      }}>{`NuGet`}</a>{`, and is currently in the prerelease state.`}</p>\n    <h2 {...{\n      \"id\": \"quick-start\"\n    }}>{`Quick Start`}</h2>\n    <p>{`To start recording, you need your unique API key. This can be found in your apps settings in `}<a parentName=\"p\" {...{\n        \"href\": \"https://app.smartlook.com/settings/projects\"\n      }}>{`Smartlook Dashboard`}</a>{`.`}</p>\n    <p>{`To access Smartlook API, use static methods exposed by `}<inlineCode parentName=\"p\">{`Smartlook.Analytics`}</inlineCode>{` class. The methods are the same for multi-platform, Android or iOS projects.`}</p>\n    <p>{`The most straightforward way to run Smartlook is by calling the following method at the very begin of the app life-cycle (e.g., iOS: `}<inlineCode parentName=\"p\">{`AppDelegates`}</inlineCode>{`â€™s `}<inlineCode parentName=\"p\">{`FinishedLaunching`}</inlineCode>{`, Android: `}<inlineCode parentName=\"p\">{`Application`}</inlineCode>{` class `}<inlineCode parentName=\"p\">{`OnCreate`}</inlineCode>{`):`}</p>\n    <Code snippets={{\n      csharp: `\nusing Smartlook;\n  \n...\n  \nSmartlook.Analytics.SetupAndStart(\"your-app-sdk-key\");\n      `\n    }} mdxType=\"Code\" />\n    <p>{`[Note: the following should be in common text included into all SDK installtation docs]`}</p>\n    <p>{`Thats all you need for a quick start.`}</p>\n    <Alert kind=\"info\" invisibleOn=\"\" mdxType=\"Alert\">\nSDK will upload sessions only on WiFi if you want to upload sessions on mobile connections too, you need to enable this in your project setting in the dashboard.\n    </Alert>\n    <p>{`After this basic setup SDK will:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`record your application.`}</li>\n      <li parentName=\"ul\">{`stop itself automatically on application closure.`}</li>\n      <li parentName=\"ul\">{`automatically hide some default sensitive views.`}</li>\n      <li parentName=\"ul\">{`detect basic user gestures and touches.`}</li>\n      <li parentName=\"ul\">{`records install referrer if present.`}</li>\n      <li parentName=\"ul\">{`and much more!`}</li>\n    </ul>\n    <p>{`For any SDK customization please refer to `}<a parentName=\"p\" {...{\n        \"href\": \"/nextgen-docs/api_reference?platform=xamarin\"\n      }}>{`Smartlook API reference`}</a>{`.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}