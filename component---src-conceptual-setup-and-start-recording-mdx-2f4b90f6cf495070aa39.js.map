{"version":3,"sources":["webpack:///../src/conceptual/setup-and-start-recording.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","snippets","android","java","kotlin","ios","swift","objc","react","js","ionic","typescript","cordova","xamarin","csharp","unity","unreal","cocos","cpp","lua","flutter","dart","visibleOn","platform","href","isMDXComponent"],"mappings":"6gBAQO,IAAMA,EAAe,Q,8NAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,MAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,0BADR,2BAGA,qBAAG,kBAAIC,WAAW,KAAf,qFACH,qNACA,0HACA,YAAC,IAAD,CAAWC,SAAU,CACnBC,SAAO,GACLC,KAAM,4KAMNC,OAAQ,oCAPH,+CAcPC,IAAK,CACHC,MAAO,sQAWPC,KAAM,sQAWRC,MAAO,CACLC,GAAI,oJAMNC,MAAO,CACLD,GAAI,6BAGJE,WAAY,8BAIdC,QAAS,CACPH,GAAI,+BAGJE,WAAY,gCAIdE,QAAS,CACPC,OAAQ,wBAIVC,MAAO,CACLD,OAAQ,sBAIVE,OAAQ,CACNF,OAAQ,uBAIVG,MAAO,CACLC,IAAK,sBAGLC,IAAK,oBAIPC,QAAS,CACPC,KAAM,mEAIPtB,QAAQ,cACX,+JACA,sDACA,sBACE,kBAAIC,WAAW,MAAf,yKACA,kBAAIA,WAAW,MAAf,uNAEF,YAAC,IAAD,CAAWsB,UAAU,MAAMvB,QAAQ,cACpC,SAAAwB,GACK,OAAO,uQACuO,iBAAGC,KAAK,2CAAR,kBADvO,QAKX,iBAAQ,CACN,GAAM,0BADR,0BAGA,2NACA,oLACA,yFAAwE,mBAAGxB,WAAW,KAAQ,CAC1F,KAAQ,6DAD4D,iBAAxE,W,4NAOJJ,EAAW6B,gBAAiB","file":"component---src-conceptual-setup-and-start-recording-mdx-2f4b90f6cf495070aa39.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/nextgen-docs/nextgen-docs/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { CodeBlock } from \"components/CodeBlock\";\nimport { TextBlock } from \"components/TextBlock\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"setup--start-recording\"\n    }}>{`Setup & Start Recording`}</h1>\n    <p><em parentName=\"p\">{`This section deals with how to setup Smartlook SDK and start recording your app.`}</em></p>\n    <p>{`To start recording, just put the following code into your application. Once you run your app on a device or in a simulator, recording will appear in your dashboard (link to the dashboard).`}</p>\n    <p>{`In order to function properly, the setup should happen as soon as possible in the app life cycle:`}</p>\n    <CodeBlock snippets={{\n      android: {\n        java: `\nSmartlook.setupAndStartRecording(String YOUR_API_KEY)\n \n// TODO: notes when using this other method \nSmartlook.setup(String YOUR_API_KEY, Activity activity)\n      `,\n        kotlin: `\nandroid kotlin snippet\n      `,\n        kotlin: `\nandroid kotlin snippet\n      `\n      },\n      ios: {\n        swift: `\ninclude Smartlook\n \n...\n \nfunc application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -> Bool {\n \n   Smartlook.setup(key: \"YOUR_API_KEY\")\n   Smartlook.startRecording()\n}\n      `,\n        objc: `\n#include Smartlook\n \n...\n \nfunc application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -> Bool {\n \n   Smartlook.setup(key: \"YOUR_API_KEY\")\n   Smartlook.startRecording()\n}      `\n      },\n      react: {\n        js: `\n// Smartlook initialization\nvar Smartlook = require(\"smartlook-react-native-wrapper\"); \nSmartlook.setupAndStartRecording(\"API_KEY\");\n      `\n      },\n      ionic: {\n        js: `\nIonic javascript\n      `,\n        typescript: `\nIonic typescript\n      `\n      },\n      cordova: {\n        js: `\nCordova javascript\n      `,\n        typescript: `\nCordova typescript\n      `\n      },\n      xamarin: {\n        csharp: `\nXamarin C#\n      `\n      },\n      unity: {\n        csharp: `\nUnity C#\n      `\n      },\n      unreal: {\n        csharp: `\nUnreal C#\n      `\n      },\n      cocos: {\n        cpp: `\nCocos C++\n      `,\n        lua: `\nCocos lua\n   `\n      },\n      flutter: {\n        dart: `\n      Smartlook.setupAndStartRecording('YOUR_API_KEY');\n   `\n      }\n    }} mdxType=\"CodeBlock\" />\n    <p>{`This is basically all you need to record your sessions. All other events in the app life cycle are handled by Smartlook automatically.`}</p>\n    <p>{`Note: common startup issues: `}</p>\n    <ul>\n      <li parentName=\"ul\">{`it may take several minutes before the recordings appear in the Dashboard. The recording is not streamed, it is uploaded in chunks and then processed on the server. `}</li>\n      <li parentName=\"ul\">{`in the default setup, recordings are not uploaded when the device is on a mobile network. In order to see the recordings immediately, please make sure the device is on WiFi (link to documentation & dashboard). `}</li>\n    </ul>\n    <TextBlock visibleOn=\"ios\" mdxType=\"TextBlock\">\n  {platform => {\n        return <div>\n         NOTE: When debugging your app with Smartlook, you will encounter a Main Thread Checker warning which might be accompanied by a short app freeze during the app start. The freeze does not happen in production builds. For details, see this <a href=\"/cookbook/ios-main-thread-check-warning\">technical note</a>.\n      </div>;\n      }}\n    </TextBlock>\n    <h2 {...{\n      \"id\": \"setup-options-overview\"\n    }}>{`Setup Options Overview`}</h2>\n    <p>{`Smartlook recording could be customized by several parameters. Some of the recording customization options could be set by dedicated methods, some others can be only/also set as startup options.`}</p>\n    <p>{`Not all options are available on all platforms. For most options, there is also a dedicated method or property that can set it later in the app life-cycle.`}</p>\n    <p>{`For comprehensive list of all options and other details, consult `}<a parentName=\"p\" {...{\n        \"href\": \"http://localhost:3000/api_reference/#setup-configuration\"\n      }}>{`API reference`}</a>{`.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}