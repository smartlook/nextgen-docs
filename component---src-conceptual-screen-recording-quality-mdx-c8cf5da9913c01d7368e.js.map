{"version":3,"sources":["webpack:///../src/conceptual/screen-recording-quality.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","to","isMDXComponent"],"mappings":"ygBAQO,IAAMA,EAAe,Q,6NAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,4BADR,4BAGA,qBAAG,kBAAIC,WAAW,KAAf,2FACH,iBAAQ,CACN,GAAM,yCADR,yCAGA,2NACA,mLACA,kLACA,iBAAQ,CACN,GAAM,qBADR,qBAGA,yDAAwC,sBAAQA,WAAW,KAAnB,mBAAxC,sBAAkH,mBAAGA,WAAW,KAAQ,CACpI,KAAQ,gDADsG,YAAlH,sJAE4K,sBAAQA,WAAW,KAAnB,UAF5K,kIAEyV,sBAAQA,WAAW,KAAnB,OAFzV,wIAEygB,sBAAQA,WAAW,KAAnB,QAFzgB,iBAGA,8CACA,yBACE,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,UAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,WAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,uBAKJ,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,OAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,iBAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,wBAIF,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,UAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,kBAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,sBAIF,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,QAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,kBAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,wBAMN,wLACA,oLACA,iBAAQ,CACN,GAAM,aADR,aAGA,wZACA,gHACA,0OACA,4gBACA,YAAC,IAAD,CAAMC,GAAG,qCAAqCF,QAAQ,QAAtD,iBAhFK,KAiFL,iBAAQ,CACN,GAAM,kBADR,kBAGA,iLACA,yUACA,+DACA,YAAC,IAAD,CAAME,GAAG,wGAAwGF,QAAQ,QAAzH,sEAvFK,U,2NA4FTH,EAAWM,gBAAiB","file":"component---src-conceptual-screen-recording-quality-mdx-c8cf5da9913c01d7368e.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/nextgen-docs/nextgen-docs/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Code, CodeBlock, TextBlock, Alert, Link, MD } from \"components\";\nimport { usePlatforms } from 'hooks';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"screen-recording-quality\"\n    }}>{`Screen Recording Quality`}</h1>\n    <p><em parentName=\"p\">{`This section discusses the recording quality settings, optional tweaks and trade-offs.`}</em></p>\n    <h2 {...{\n      \"id\": \"understanding-video-recording-quality\"\n    }}>{`Understanding Video Recording Quality`}</h2>\n    <p>{`Although everyone wants the best video quality for the app recording, setting the appropriate video quality requires careful consideration and understanding the trade-offs of different settings.`}</p>\n    <p>{`The higher the quality, the more demanding the recording in terms of CPU load, memory footprint, energy consumption (battery life) and network traffic is.`}</p>\n    <p>{`The primary way to set the video quality is by selecting one of the presets available in the app dashboard. Dashboard settings affect all new recordings.`}</p>\n    <h2 {...{\n      \"id\": \"recording-quality\"\n    }}>{`Recording Quality`}</h2>\n    <p>{`There are three preset values of `}<strong parentName=\"p\">{`Low/Medium/High`}</strong>{` (see your project `}<a parentName=\"p\" {...{\n        \"href\": \"https://app.smartlook.com/settings/projects\"\n      }}>{`settings`}</a>{`). Technically, this option sets primarily the video bitrate, which affects the video image quality and size of the video data. For most projects, `}<strong parentName=\"p\">{`Medium`}</strong>{` has a best price-performance ratio. When the app is used in an environment where data size that is sent from the app matters, `}<strong parentName=\"p\">{`Low`}</strong>{` might be the best option. For apps where the high image quality of the recordings is important, and data size does not matter much, `}<strong parentName=\"p\">{`High`}</strong>{` can be used.`}</p>\n    <p>{`Current settings are:`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Preset`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Bitrate`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Maximal bandwidth`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Low`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`80 000 bits/s`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`~ 0.5 MB per minute`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Medium`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`160 000 bits/s`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`~ 1 MB per minute`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`High`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`320 000 bits/s`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`~ 2 MB per minute`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`The real data size depends on many factors (how complex the UI is, how often it changes significantly) and tends to be a fraction (½ or ⅓) of the maximal size.`}</p>\n    <p>{`Technologically, this setting affects the memory footprint of the SDK, its CPU load and primarily the size of the data that the SDK sends over the network.`}</p>\n    <h2 {...{\n      \"id\": \"framerate\"\n    }}>{`Framerate`}</h2>\n    <p>{`Framerate (in frames per second, or fps) states how often Smartlook takes a snapshot of the screen. The higher the framerate, the smoother the recording of UI changes. The trade-off is, however, higher CPU load and energy consumption. For analysing user interaction in a common app, the default fps value (2fps) is quite sufficient. Higher fps makes sense in dynamic apps like games.`}</p>\n    <p>{`We recommend setting the framerate for your project on the dashboard `}{`[link here]`}{`.`}</p>\n    <p>{`Alternatively, it can also be set as one of Smartlook setup options. This is particularly useful for debugging and finding the optimal value for the app. In production releases, this option should not be used.`}</p>\n    <p>{`The configured framerate, however, is its maximal value. In order to reduce the footprint, Smartlook watches the real changes in the UI and takes snapshots only when the UI is not idle. While working well in most apps, this kind of optimization, known as adaptive framerate, may not work perfectly in some edge cases with technologies that are used to create UI. If the adaptive framerate algorithm produces unsatisfying results, it can be switched off by the respective Smartlook setup option (see `}</p>\n    <Link to=\"/api_reference#setup-configuration\" mdxType=\"Link\">API reference</Link>).\n    <h2 {...{\n      \"id\": \"rendering-mode\"\n    }}>{`Rendering Mode`}</h2>\n    <p>{`On top of taking snapshots of the screens for the video recording, Smartlook can also present the UI in the form of several types of wireframe sketches.`}</p>\n    <p>{`Different rendering modes use different amounts of CPU, memory and produce video data of different sizes. The difference is individual for each app and depends on the way the app UI is structured. There is not always a direct relation between the simplicity of the visual presentation and resources load.`}</p>\n    <p>{`Read more about rendering modes in the`}</p>\n    <Link to=\"/conceptual/handling-sensitive-data#recording-modes-handling-sensitive-data-at-the-whole-screen-level\" mdxType=\"Link\">Recording Modes: Handling Sensitive Data at the Whole Screen Level</Link>.\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}