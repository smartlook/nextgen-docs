{"version":3,"sources":["webpack:///../src/integrations/ios.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"kfAMO,IAAMA,EAAe,Q,0MAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,mBADR,mBAGA,kIACA,kJACA,iBAAQ,CACN,GAAM,cADR,cAGA,qBAAG,kBAAIC,WAAW,KAAf,iDACH,iBAAQ,CACN,GAAM,aADR,aAGA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,sBAIL,6CAA4B,mBAAGA,WAAW,KAAQ,CAC9C,KAAQ,0BADgB,yBAA5B,KAGA,iBAAQ,CACN,GAAM,sBADR,sBAGA,sBACE,kBAAIA,WAAW,MAAf,uBAA4C,mBAAGA,WAAW,MAAS,CAC/D,KAAQ,iEADgC,qBAA5C,cAGA,kBAAIA,WAAW,MAAf,sEAEF,iBAAQ,CACN,GAAM,eADR,eAGA,0IAAyH,mBAAGA,WAAW,KAAQ,CAC3I,KAAQ,gDAD6G,gDAGzH,iBAAQ,CACN,GAAM,SADR,SAGA,gCAAe,0BAAYA,WAAW,KAAvB,qBAAf,4BACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,mBADZ,uBAIL,gCAAe,0BAAYA,WAAW,KAAvB,yCACf,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,mBADZ,2OAOL,iBAAQ,CACN,GAAM,QADR,QAGA,gCAAe,0BAAYA,WAAW,KAAvB,iBAAf,4BACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,sCAIL,gCAAe,0BAAYA,WAAW,KAAvB,iHACf,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,iNAOL,qBAAG,kBAAIA,WAAW,KAAf,gFACH,6DACA,gMACA,yDACA,sBACE,kBAAIA,WAAW,MAAf,4BACA,kBAAIA,WAAW,MAAf,qDACA,kBAAIA,WAAW,MAAf,oDACA,kBAAIA,WAAW,MAAf,2CACA,kBAAIA,WAAW,MAAf,wCACA,kBAAIA,WAAW,MAAf,mBAEF,2F,wMAKJJ,EAAWK,gBAAiB","file":"component---src-integrations-ios-mdx-4d422d09d59ca1e78f48.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/nextgen-docs/nextgen-docs/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"ios-integration\"\n    }}>{`iOS Integration`}</h1>\n    <p>{`There are several possible ways how to integrate Smartlook SKD into a native iOS (Swift or ObjC project).`}</p>\n    <p>{`Note: if you integrate Smartlook SDK using Segment, please follow these instructions: `}{`[link]`}{` instead this document.`}</p>\n    <h2 {...{\n      \"id\": \"installing\"\n    }}>{`Installing`}</h2>\n    <p><em parentName=\"p\">{`Note: the following should be tabbed options`}</em></p>\n    <h3 {...{\n      \"id\": \"cocoapods\"\n    }}>{`Cocoapods`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ruby\"\n      }}>{`pod 'Smartlook'\n`}</code></pre>\n    <p>{`More about Cocoapods `}<a parentName=\"p\" {...{\n        \"href\": \"https://cocoapods.org\"\n      }}>{`https://cocoapods.org`}</a>{`.`}</p>\n    <h3 {...{\n      \"id\": \"manual-integration\"\n    }}>{`Manual Integration`}</h3>\n    <ol>\n      <li parentName=\"ol\">{`Download the latest `}<a parentName=\"li\" {...{\n          \"href\": \"https://sdk.smartlook.com/ios/smartlook-ios-sdk-1.2.5.59.zip\"\n        }}>{`Smartlook iOS SDK`}</a>{` directly.`}</li>\n      <li parentName=\"ol\">{`Unzip the file and add Smartlook.framework to your Xcode project.`}</li>\n    </ol>\n    <h2 {...{\n      \"id\": \"quick-start\"\n    }}>{`Quick Start`}</h2>\n    <p>{`To start recording, you need your unique API key. This can be found in your apps settings in Smartlook Dashboard: `}<a parentName=\"p\" {...{\n        \"href\": \"https://app.smartlook.com/settings/projects\"\n      }}>{`https://app.smartlook.com/settings/projects`}</a></p>\n    <h3 {...{\n      \"id\": \"swift\"\n    }}>{`Swift`}</h3>\n    <p>{`In your `}<inlineCode parentName=\"p\">{`AppDelegate.swift`}</inlineCode>{` add among other imports`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`import Smartlook\n`}</code></pre>\n    <p>{`then in `}<inlineCode parentName=\"p\">{`application(_,didLaunchWithOptions:)`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`  func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -> Bool {\n        \n    Smartlook.setup(key: \"YOUR_API_KEY\")\n    Smartlook.startRecording()\\`\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"objc\"\n    }}>{`ObjC`}</h3>\n    <p>{`In your `}<inlineCode parentName=\"p\">{`AppDelegate.m`}</inlineCode>{` add among other imports`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objc\"\n      }}>{`#import <Smartlook/Smartlook.h>\n`}</code></pre>\n    <p>{`then in `}<inlineCode parentName=\"p\">{`- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-objc\"\n      }}>{`  - (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {\n        \n    [Smartlook setupWithKey:@\"YOUR_API_KEY\"];\n    [Smartlook startRecording];\n`}</code></pre>\n    <p><em parentName=\"p\">{`Note: the following should be in common text included into all integrations`}</em></p>\n    <p>{`Thats all you need for a quck start.`}</p>\n    <p>{`NOTE: SDK will upload sessions only on WiFi if you want to upload sessions on mobile connections too, you need to enable this in your project setting in the dashboard.`}</p>\n    <p>{`After this basic setup SDK will:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`record your application.`}</li>\n      <li parentName=\"ul\">{`stop itself automatically on application closure.`}</li>\n      <li parentName=\"ul\">{`automatically hide some default sensitive views.`}</li>\n      <li parentName=\"ul\">{`detect basic user gestures and touches.`}</li>\n      <li parentName=\"ul\">{`records install referrer if present.`}</li>\n      <li parentName=\"ul\">{`and much more!`}</li>\n    </ul>\n    <p>{`For any SDK customization please refer to our api reference.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}