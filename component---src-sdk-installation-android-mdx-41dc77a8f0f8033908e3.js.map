{"version":3,"sources":["webpack:///../src/sdk-installation/android.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","snippets","gradle","java","kotlin","kind","visibleOn","isMDXComponent"],"mappings":"2gBAQO,IAAMA,EAAe,Q,kNAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,4BADR,4BAGA,sBACE,kBAAIC,WAAW,MAAf,yBAA8C,sBAAQA,WAAW,MAAnB,SAA9C,IAA6F,0BAAYA,WAAW,MAAvB,gBAA7F,MAEF,YAAC,IAAD,CAAMC,SAAU,CACdC,OAAQ,kEAGPH,QAAQ,SACX,iBAAQ,CACN,MAAS,GAET,kBAAIC,WAAW,MAAf,0CAA+D,sBAAQA,WAAW,MAAnB,YAA/D,IAAiH,0BAAYA,WAAW,MAAvB,gBAAjH,MAEF,YAAC,IAAD,CAAMC,SAAU,CACdC,OAAQ,0HASPH,QAAQ,SACX,uDAAsC,sBAAQC,WAAW,KAAnB,cAAtC,YAAiG,sBAAQA,WAAW,KAAnB,eAAjG,WACA,YAAC,IAAD,CAAMC,SAAU,CACdE,KAAM,8MASNC,OAAQ,oLAQPL,QAAQ,SACX,YAAC,IAAD,CAAOM,KAAK,YAAYC,UAAU,UAAUP,QAAQ,SAApD,oGAGA,YAAC,IAAD,CAAOM,KAAK,OAAOC,UAAU,UAAUP,QAAQ,SAA/C,qKAGA,iBAAQ,CACN,GAAM,oBADR,qBAGA,yDACA,sBACE,kBAAIC,WAAW,MAAf,4BACA,kBAAIA,WAAW,MAAK,sBAAQA,WAAW,MAAnB,oDAApB,KACA,kBAAIA,WAAW,MAAf,oDACA,kBAAIA,WAAW,MAAf,2CACA,kBAAIA,WAAW,MAAf,wCACA,kBAAIA,WAAW,MAAf,mBAEF,iBAAQ,CACN,GAAM,sBADR,sBAGA,kCAAiB,sBAAQA,WAAW,KAAnB,WAAjB,iCAA8F,sBAAQA,WAAW,KAAnB,uBAA9F,KACA,iBAAQ,CACN,GAAM,iBADR,iBAGA,4HAA2G,mBAAGA,WAAW,KAAQ,CAC7H,KAAQ,8DAD+F,iBAA3G,W,gNAOJJ,EAAWW,gBAAiB","file":"component---src-sdk-installation-android-mdx-41dc77a8f0f8033908e3.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/nextgen-docs/nextgen-docs/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Code } from \"components/Code\";\nimport { Alert } from \"components/Alert\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"android-sdk-installation\"\n    }}>{`Android SDK Installation`}</h1>\n    <ol>\n      <li parentName=\"ol\">{`Add Smartlook in your `}<strong parentName=\"li\">{`appâ€™s`}</strong>{` `}<inlineCode parentName=\"li\">{`build.gradle`}</inlineCode>{`:`}</li>\n    </ol>\n    <Code snippets={{\n      gradle: `\nimplementation('com.smartlook.recording:app:1.5.0-native')\n`\n    }} mdxType=\"Code\" />\n    <ol {...{\n      \"start\": 2\n    }}>\n      <li parentName=\"ol\">{`Add Smartlook Maven repository in your `}<strong parentName=\"li\">{`projects`}</strong>{` `}<inlineCode parentName=\"li\">{`build.gradle`}</inlineCode>{`:`}</li>\n    </ol>\n    <Code snippets={{\n      gradle: `\nallprojects {\n  repositories {\n    maven {\n      url \"https://sdk.smartlook.com/android/release\"\n    }\n  }\n}\n`\n    }} mdxType=\"Code\" />\n    <p>{`3.Setup and start Smartlook in `}<strong parentName=\"p\">{`onCreate()`}</strong>{` of your `}<strong parentName=\"p\">{`Application`}</strong>{` class:`}</p>\n    <Code snippets={{\n      java: `\npublic class MyCustomApplication extends Application {\n    @Override\n    public void onCreate() {\n        super.onCreate();\n        Smartlook.setupAndStartRecording(YOUR_API_KEY);\n    }\n}\n      `,\n      kotlin: `\nclass MyCustomApplication : Application() {\n    override fun onCreate() {\n        super.onCreate()\n        Smartlook.setupAndStartRecording(YOUR_API_KEY)\n    }\n}\n      `\n    }} mdxType=\"Code\" />\n    <Alert kind=\"important\" visibleOn=\"android\" mdxType=\"Alert\">\nYou need to provide your Smartlook SDK API key which can be acquired in the Smartlook Dashboard.\n    </Alert>\n    <Alert kind=\"info\" visibleOn=\"android\" mdxType=\"Alert\">\nSDK will upload sessions only on WiFi if you want to upload sessions on mobile connections too, you need to enable this in your project setting in the dashboard.\n    </Alert>\n    <h1 {...{\n      \"id\": \"what-will-sdk-do\"\n    }}>{`What will SDK do?`}</h1>\n    <p>{`After this basic setup SDK will:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`record your application.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`stop itself automatically on application closure`}</strong>{`.`}</li>\n      <li parentName=\"ul\">{`automatically hide some default sensitive views.`}</li>\n      <li parentName=\"ul\">{`detect basic user gestures and touches.`}</li>\n      <li parentName=\"ul\">{`records install referrer if present.`}</li>\n      <li parentName=\"ul\">{`and much more!`}</li>\n    </ul>\n    <h1 {...{\n      \"id\": \"supported-versions\"\n    }}>{`Supported versions`}</h1>\n    <p>{`Currently `}<strong parentName=\"p\">{`minimal`}</strong>{` supported Android version is `}<strong parentName=\"p\">{`Jelly Bean (API 18)`}</strong>{`.`}</p>\n    <h1 {...{\n      \"id\": \"issue-tracker\"\n    }}>{`Issue tracker`}</h1>\n    <p>{`If you are experiencing any technical difficulties with opur SDK feel free to report a issue to our `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/smartlook/smartlook-android-sdk/issues\"\n      }}>{`issue tracker`}</a>{`.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}