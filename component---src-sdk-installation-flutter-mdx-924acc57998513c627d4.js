(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{HdlA:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return i})),n.d(t,"default",(function(){return s}));n("5hJT"),n("W1QL"),n("K/PF"),n("t91x"),n("75LO"),n("PJhk"),n("mXGw");var a=n("/FXl"),o=n("TjRS");n("aD51");function r(){return(r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}var i={};void 0!==i&&i&&i===Object(i)&&Object.isExtensible(i)&&!i.hasOwnProperty("__filemeta")&&Object.defineProperty(i,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/sdk-installation/flutter.mdx"}});var l={_frontmatter:i},c=o.a;function s(e){var t=e.components,n=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,["components"]);return Object(a.b)(c,r({},l,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"quick-start"},"Quick Start"),Object(a.b)("p",null,"For full documentation, see ",Object(a.b)("a",{href:"https://smartlook.github.io/docs/sdk/android/"}," Android documentation for native SDK"),". Note that not all native SDK API methods are available on Flutter."),Object(a.b)("h3",{id:"add-smartlook-to-your-project"},"Add Smartlook to your Project"),Object(a.b)("p",null,"You can integrate Smartlook to you flutter app by adding it as another dependency to your public ",Object(a.b)("inlineCode",{parentName:"p"},"pubspec.yaml")),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-yaml"}),"dependencies:\n  smartlook:\n")),Object(a.b)("h3",{id:"start-smartlook"},"Start Smartlook"),Object(a.b)("p",null,"To start recording, call the following as early as possible in the app lifecycle (e.g., when initializing your app state):"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-dart"}),"Smartlook.setupAndStartRecording('YOUR_API_KEY');\n")),Object(a.b)("h2",{id:"platform-notes"},"Platform notes"),Object(a.b)("p",null,"does not automatically record events and navigation, this this is important"),Object(a.b)("p",null,"with links to the reference"),Object(a.b)("h3",{id:"record-navigation"},"Record Navigation"),Object(a.b)("p",null,"On Flutter, Smartlook cannot record user navigation in the app automatically, you have to add navigation events (when user enters and exits distinct parts of the app) in the code yourself:"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-dart"}),'// the first argument identifies the app section, the second the event type\nSmartlook.trackNavigationEvent("shopping_cart", SmartlookNavigationEventType.enter);\nSmartlook.trackNavigationEvent("shopping_cart", SmartlookNavigationEventType.exit);\n')),Object(a.b)("h3",{id:"record-other-events"},"Record Other Events"),Object(a.b)("p",null,"Recording is not limited to navigation events, you can record any event and its properties in the app by calling"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-dart"}),'Smartlook.trackCustomEvent("custom_event_name", { "property_1" : "value_1"} );\n')),Object(a.b)("h3",{id:"masking-sensitive-data"},"Masking Sensitive Data"),Object(a.b)("p",null,"Somethimes, you don't want to record the screen as user enters sensitive data, e.g., passwords. In such a situation, screen recoring can be obfuscated by calling"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-dart"}),"Smartlook.startFullscreenSensitiveMode();\nSmartlook.stopFullscreenSensitiveMode();\n")))}void 0!==s&&s&&s===Object(s)&&Object.isExtensible(s)&&!s.hasOwnProperty("__filemeta")&&Object.defineProperty(s,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/sdk-installation/flutter.mdx"}}),s.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-sdk-installation-flutter-mdx-924acc57998513c627d4.js.map