(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{aqFm:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return l})),n.d(t,"default",(function(){return p}));var o=n("Fcif"),r=n("+I+c"),a=(n("mXGw"),n("/FXl")),i=n("TjRS"),s=n("+8zC"),l=(n("NRsk"),n("aD51"),{});void 0!==l&&l&&l===Object(l)&&Object.isExtensible(l)&&!l.hasOwnProperty("__filemeta")&&Object.defineProperty(l,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/api-reference-example.mdx"}});var m={_frontmatter:l},v=i.a;function p(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(a.b)(v,Object(o.a)({},m,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"custom-events"},"Custom Events"),Object(a.b)("p",null,"To track app events programatically, Smartlook provides two groups of methods:"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Custom Events Methods")),Object(a.b)(s.c,{snippets:{android:{java:"\nSmartlook.trackCustomEvent(@NonNull String eventName);\n\nSmartlook.trackCustomEvent(@NonNull String eventName, JSONObject eventProperties);\nSmartlook.trackCustomEvent(@NonNull String eventName, Bundle eventProperties);\nSmartlook.trackCustomEvent(@NonNull String eventName, String validJsonString);\nSmartlook.trackCustomEvent(@NonNull String eventName, @NotNull String key, String value);\n      ",kotlin:"\nSmartlook.trackCustomEvent(@NonNull eventName: String)\n\nSmartlook.trackCustomEvent(@NonNull eventName: String, eventProperties: JSONObject);\nSmartlook.trackCustomEvent(@NonNull eventName: String, eventProperties: Bundle);\nSmartlook.trackCustomEvent(@NonNull eventName: String, validJsonString: String);\nSmartlook.trackCustomEvent(@NonNull eventName: String, @NotNull key: String, value: String);\n      "},cordova:{javascript:'\nSmartlook.trackCustomEvent({name: "sample_event"})\nSmartlook.trackCustomEvent( {name: "sample_event", eventProperties: {id: "sample_id", text: "sample text"}})\n      '},ios:{swift:"\nSmartlook.trackCustomEvent(name eventName: String)\nSmartlook.trackCustomEvent(name: String, props: [String : String]?)\n","objective-c":"\n+ (void)trackCustomEventWithName:(nonnull NSString*)eventName;\n+ (void)trackCustomEventWithName:(nonnull NSString*)eventName props:(nullable NSDictionary<NSString*, NSString*>*)props;\n      "},flutter:{dart:"\nSmartlook.trackCustomEvent(String eventName);\nSmartlook.trackCustomEvent(String eventName, [Object map = null]);\n"},unity:{csharp:"\nSmartlookUnity.Smartlook.TrackCustomEvent(string eventName);\n\n//json string, obtained for example with JsonUtility.ToJson(param)\nSmartlookUnity.TrackCustomEvent(string eventName, string properties);\n"},react:{javascript:"\nSmartlook.trackCustomEvent(key);\nSmartlook.trackCustomEvent(key, map);\n"}},mdxType:"CodeBlock"}),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Timed Custom Events Methods")),Object(a.b)(s.c,{snippets:{android:{java:"\nSmartlook.startTimedCustomEvent(@NotNull String eventName);\nSmartlook.startTimedCustomEvent(@NotNull String eventName, JSONObject eventProperties);\nSmartlook.startTimedCustomEvent(@NotNull String eventName, Bundle eventProperties);\nSmartlook.startTimedCustomEvent(@NotNull String eventName, String eventPropertiesJson);\n\nSmartlook.stopTimedCustomEvent(@NotNull String eventId);\nSmartlook.stopTimedCustomEvent(@NotNull String eventId, JSONObject eventProperties);\nSmartlook.stopTimedCustomEvent(@NotNull String eventId, Bundle eventProperties);\nSmartlook.stopTimedCustomEvent(@NotNull String eventId, String eventPropertiesJson);\n\nSmartlook.cancelTimedCustomEvent(@NotNull String eventId, String reason);\nSmartlook.cancelTimedCustomEvent(@NotNull String eventId, String reason, JSONObject eventProperties);\nSmartlook.cancelTimedCustomEvent(@NotNull String eventId, String reason, Bundle eventProperties);\nSmartlook.cancelTimedCustomEvent(@NotNull String eventId, String reason, String eventPropertiesJson);\n      ",kotlin:"\nSmartlook.startTimedCustomEvent(@NotNull eventName: String)\nSmartlook.startTimedCustomEvent(@NotNull eventName: String, eventProperties: JSONObject)\nSmartlook.startTimedCustomEvent(@NotNull eventName: String, eventProperties: Bundle)\nSmartlook.startTimedCustomEvent(@NotNull eventName: String, eventPropertiesJson: String)\n\nSmartlook.stopTimedCustomEvent(@NotNull eventId: String)\nSmartlook.stopTimedCustomEvent(@NotNull eventId: String, eventProperties: JSONObject)\nSmartlook.stopTimedCustomEvent(@NotNull eventId: String, eventProperties: Bundle)\nSmartlook.stopTimedCustomEvent(@NotNull eventId: String, eventPropertiesJson: String)\n\nSmartlook.cancelTimedCustomEvent(@NotNull eventId: String, reason: String)\nSmartlook.cancelTimedCustomEvent(@NotNull eventId: String, reason: String, eventProperties: JSONObject)\nSmartlook.cancelTimedCustomEvent(@NotNull eventId: String, reason: String, eventProperties: Bundle)\nSmartlook.cancelTimedCustomEvent(@NotNull eventId: String, reason: String, eventPropertiesJson: String)\n      "},cordova:{javascript:'\nSmartlook.startTimedCustomEvent({name: "sample_timed_event", eventProperties: {sample: "object"}});\nSmartlook.stopTimedCustomEvent({eventId: "event_id", eventProperties: {sample: "object"}});\nSmartlook.cancelTimedCustomEvent({eventId: "event_id", reason: "cancel reason" eventProperties: {sample: "object"}});\n      '},ios:{swift:"\nSmartlook.startTimedCustomEvent(name: String, props: [String : String]?) -> Any\nSmartlook.trackTimedCustomEvent(eventId: Any, props: [String : String]?)\nSmartlook.trackTimedCustomEventCancel(eventId: Any, reason: String?, props: [String : String]?)\n","objective-c":"\n + (id _Nonnull)startTimedCustomEventWithName:(nonnull NSString*)eventName props:(nullable NSDictionary<NSString*, NSString*>*)props;\n // to track successfull events\n+ (void)trackTimedCustomEventWithEventId:(id _Nonnull)eventId props:(nullable NSDictionary<NSString*, NSString*>*)props;\n// to track event cancellation\n+ (void)trackTimedCustomEventCancelWithEventId:(id _Nonnull)eventId reason:(NSString *_Nullable)reason props:(nullable NSDictionary<NSString*, NSString*>*)props;\n      "},flutter:{dart:"\nSmartlook.startTimedCustomEvent(String eventName, [Object map = null]);\nSmartlook.stopTimedCustomEvent(String key, [Object map = null]);\nSmartlook.cancelTimedCustomEvent(String key, String reason, [Object map = null]);\n"},unity:{csharp:"\nSmartlookUnity.Smartlook.StartTimedCustomEvent(string eventName);\nSmartlookUnity.Smartlook.StartTimedCustomEvent(string eventName, string properties)\nSmartlookUnity.Smartlook.StopTimedCustomEvent(string eventId);\nSmartlookUnity.Smartlook.StopTimedCustomEvent(string eventId, string properties);\nSmartlookUnity.Smartlook.CancelTimedCustomEvent(string eventId, string reason);\nSmartlookUnity.Smartlook.CancelTimedCustomEvent(string eventId, string reason, string properties);\n"},react:{javascript:'\nSmartlook.startTimedCustomEvent("sample_timed_event", {prop: "propValue"});\nSmartlook.stopTimedCustomEvent("event_id", {prop: "propValue"});\nSmartlook.stopTimedCustomEvent("event_id", "reason", {prop: "propValue"});\n'}},mdxType:"CodeBlock"}),Object(a.b)(s.a,{kind:"important",visibleOn:"cordova,react,flutter",mdxType:"Alert"},"Event properties will effectively use only flat object. This means that if you pass json object that includes objects or arrays as a child elements these elements are goint to be ignored."),Object(a.b)("h2",{id:"dicussion"},"Dicussion"),Object(a.b)("p",null,"There are several use-cases when automated event capturing by Smartlook may not be suficcient for detailed analytics:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"On some platforms, automated events capturing is technically not possible"),Object(a.b)("li",{parentName:"ul"},"Some parameters that make the event important for analytics can only be provided programatically by the app author"),Object(a.b)("li",{parentName:"ul"},"Some events are not directly caused by user interaction with UI (i.e., detectable automatically as user ",Object(a.b)("em",{parentName:"li"},"clicks"),")"),Object(a.b)("li",{parentName:"ul"},"Some events are result of a lenghty, oft assynchronous operation which duration is also important.")),Object(a.b)("p",null,"For these use-cases, tracking events programatically could be handy."),Object(a.b)("p",null,"In the common case, when the event has no duration, the method call is straigthforward:"),Object(a.b)(s.a,{kind:"example",mdxType:"Alert"},Object(a.b)(s.c,{snippets:{android:{java:'\nSmartlook.trackCustomEvent("CUSTOM_EVENT", eventProperties);\n      ',kotlin:'\nSmartlook.trackCustomEvent("CUSTOM_EVENT", eventProperties:);\n      '},cordova:{javascript:'\nSmartlook.trackCustomEvent( {name: "sample_event", eventProperties: {id: "sample_id", text: "sample text"}})\n      '},ios:{swift:'\nSmartlook.trackCustomEvent("custom_event", props: [ "some_property" : somePropertyValue ]);\n\n',"objective-c":'\n[Smartlook trackCustomEventWithName:@"duration_event" props:@{ @"some_property" : somePropertyValue }];\n      '},flutter:{dart:"\nan example here\n"},unity:{csharp:"\nan example here\n"},react:{javascript:"\nan example here\n"}},mdxType:"CodeBlock"})),Object(a.b)(s.a,{kind:"note",visibleOn:"android",mdxType:"Alert"},"If you struggle with serialization of your data take a look here."),Object(a.b)("p",null,"When, however, the app want to track result of some leghty process, e.g., a result and a duration of a network call, then:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("p",{parentName:"li"},Object(a.b)("strong",{parentName:"p"},"Start timed event"),": set its name and optional start properties, store the event reference returned by Smartlook. Nothing is tracked at this moment.")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("p",{parentName:"li"},"When event ends, ",Object(a.b)("strong",{parentName:"p"},"track the event"),". Identify the event with the stored event reference. You can also provide additional properties to it.")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("p",{parentName:"li"},"Or, when you want to cancel the event, ",Object(a.b)("strong",{parentName:"p"},"track the event canceling"),". Identify the event with the stored event reference. You can also provide optional ",Object(a.b)("strong",{parentName:"p"},"reason")," for the canceling and other additional properties to it."))),Object(a.b)("p",null,"By tracking or canceling the event its duration is recorded automatically."),Object(a.b)(s.a,{kind:"example",mdxType:"Alert"},Object(a.b)(s.c,{snippets:{android:{java:'\nString eventID = Smartlook.startTimedCustomEvent("duration_event");\nThread.sleep(1000); //long running operation\nSmartlook.stopTimedCustomEvent(eventId);\n      ',kotlin:'\nval eventID = Smartlook.startTimedCustomEvent("duration_event")\nThread.sleep(1000) //long running operation\nSmartlook.stopTimedCustomEvent(eventId)\n      '},cordova:{javascript:'\nvar eventID = Smartlook.startTimedCustomEvent({name: "duration_event"});\nsetTimeout(function() {\nSmartlook.stopTimedCustomEvent({eventId: eventId})\n}, 1000);\n      '},ios:{swift:'\n// start event, and store its reference\nlet eventRef = Smartlook.startTimedCustomEvent("duration_event", props: [ "some_property" : somePropertyValue ]);\n\n// some lenghty operation...\n\n// event ends as expected\nSmartlook.trackTimedCustomEvent(eventRef, [ "result" : success ? "success" : "failure", "some_result_property" : someResultValue ]);\n\n// opetation is cancelled, e.g. by user\nSmartlook.trackTimedCustomEventCancel(eventId: eventRef, reason: "cancelled by user")\n',"objective-c":'\n// start event, and store its reference\nid eventRef = [Smartlook startTimedCustomEventWithName:@"duration_event" props:@{ @"some_property" : somePropertyValue }];\n// some lenghty operation...\n\n// event ends as expected\n[Smartlook trackTimedCustomEventWithEventId:eventRef props:@{ @"result" : success ? @"success" : @"failure", @"some_result_property" : someResultValue } ];\n\n// opetation is cancelled, e.g. by user\n[Smartlook trackTimedCustomEventCancelWithEventId:eventRef reason:@"cancelled by user" props:nil];\n      '},flutter:{dart:"\nan example here\n"},unity:{csharp:"\nan example here\n"},react:{javascript:"\nan example here\n"}},mdxType:"CodeBlock"})),Object(a.b)(s.a,{kind:"important",mdxType:"Alert"},"Properties set in start will be **merged** with properties set while tracking the event. Properties provided with the tracking method have higher priority and will rewrite conflicting strat event properties."))}void 0!==p&&p&&p===Object(p)&&Object.isExtensible(p)&&!p.hasOwnProperty("__filemeta")&&Object.defineProperty(p,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/api-reference-example.mdx"}}),p.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-api-reference-example-mdx-7e6d7d8419b125957332.js.map