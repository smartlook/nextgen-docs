{"version":3,"sources":["webpack:///../src/sdk-installation/cocos.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","snippets","gradle","parentName","kind","java","kotlin","to","isMDXComponent"],"mappings":"oQAQaA,G,oBAAe,S,gNAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,0BADR,0BAGA,iBAAQ,CACN,GAAM,WADR,WAGA,oHACA,YAAC,IAAD,CAAMC,SAAU,CACdC,OAAQ,0HASPF,QAAQ,SACX,kEAAiD,0BAAYG,WAAW,KAAvB,8DACjD,YAAC,IAAD,CAAMF,SAAU,CACdC,OAAQ,kEAGPF,QAAQ,SACX,iBAAQ,CACN,GAAM,mBADR,mBAGA,YAAC,IAAD,CAAWI,KAAK,YAAYJ,QAAQ,aAApC,sMAKA,YAAC,IAAD,CAAMC,SAAU,CACdI,KAAM,uOAUNC,OAAQ,8MASPN,QAAQ,SACX,iBAAQ,CACN,GAAM,OADR,OAGA,oCACA,YAAC,IAAD,CAAWI,KAAK,OAAOJ,QAAQ,aAA/B,sVAKA,iBAAQ,CACN,GAAM,oBADR,qBAGA,yDACA,sBACE,kBAAIG,WAAW,MAAf,4BACA,kBAAIA,WAAW,MAAK,sBAAQA,WAAW,MAAnB,oDAApB,KACA,kBAAIA,WAAW,MAAf,oDACA,kBAAIA,WAAW,MAAf,2CACA,kBAAIA,WAAW,MAAf,wCACA,kBAAIA,WAAW,MAAf,mBAEF,mFACA,YAAC,IAAD,CAAMI,GAAG,iBAAiBP,QAAQ,QAAlC,2BACA,iBAAQ,CACN,GAAM,sBADR,sBAGA,6BACA,iBAAQ,CACN,GAAM,iBADR,iBAGA,2HAA0G,6BAAGG,WAAW,KAAQ,CAC5H,KAAQ,KAD8F,uBAA1G,W,8MAOJN,EAAWW,gBAAiB","file":"component---src-sdk-installation-cocos-mdx-4521755bed409f458008.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/nextgen-docs/nextgen-docs/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Code, CodeBlock, TextBlock, Link } from \"components\";\nimport { usePlatforms } from 'hooks';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"cocos-sdk-installation\"\n    }}>{`Cocos SDK Installation`}</h1>\n    <h2 {...{\n      \"id\": \"android\"\n    }}>{`Android`}</h2>\n    <p>{`In case you want to use SDK in Android project add these lines to your gradle project file:`}</p>\n    <Code snippets={{\n      gradle: `\nallprojects {\n  repositories {\n    maven {\n      url \"https://sdk.smartlook.com/android/release\"\n    }\n  }\n}\n`\n    }} mdxType=\"Code\" />\n    <p>{`Also add this line to your module gradle: `}<inlineCode parentName=\"p\">{`implementation('com.smartlook.recording:app:1.4.2-cocos')`}</inlineCode></p>\n    <Code snippets={{\n      gradle: `\nimplementation('com.smartlook.recording:app:1.5.0-native')\n`\n    }} mdxType=\"Code\" />\n    <h3 {...{\n      \"id\": \"start-recording\"\n    }}>{`Start Recording`}</h3>\n    <TextBlock kind=\"important\" mdxType=\"TextBlock\">\n      {`\nTo setup Smartlook, you need your unique API key. This can be found in your mobile project settings in <Link to=\"https://app.smartlook.com/settings/projects\">your Smartlook Dashboard</Link>.\n`}\n    </TextBlock>\n    <Code snippets={{\n      java: `\npublic class AppActivity extends Cocos2dxActivity {\n    @Override\n    public void onCreate() {\n        ...\n        // DO OTHER INITIALIZATION BELOW\n        Smartlook.setupAndStartRecording(YOUR_API_KEY);\n    }\n}\n      `,\n      kotlin: `\nclass AppActivity : Cocos2dxActivity() {\n    override fun onCreate() {\n        ...\n        // DO OTHER INITIALIZATION BELOW\n        Smartlook.setupAndStartRecording(YOUR_API_KEY)\n    }\n}\n      `\n    }} mdxType=\"Code\" />\n    <h2 {...{\n      \"id\": \"ios\"\n    }}>{`iOS`}</h2>\n    <p>{`Coming soon`}</p>\n    <TextBlock kind=\"note\" mdxType=\"TextBlock\">\n      {`\nSDK will upload sessions only on WiFi if you want to upload sessions on mobile connections too, you need to enable this in your project setting in the dashboard. For more details about when your recordings appear in the Dashboard, refer <Link to=\"/conceptual/when-i-will-see-the-recordings-in-dashboard\">this detailed document</Link>.\n`}\n    </TextBlock>\n    <h1 {...{\n      \"id\": \"what-will-sdk-do\"\n    }}>{`What will SDK do?`}</h1>\n    <p>{`After this basic setup SDK will:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`record your application.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`stop itself automatically on application closure`}</strong>{`.`}</li>\n      <li parentName=\"ul\">{`automatically hide some default sensitive views.`}</li>\n      <li parentName=\"ul\">{`detect basic user gestures and touches.`}</li>\n      <li parentName=\"ul\">{`records install referrer if present.`}</li>\n      <li parentName=\"ul\">{`and much more!`}</li>\n    </ul>\n    <p>{`For more advanced recording customization please refer to `}</p>\n    <Link to=\"/api_reference\" mdxType=\"Link\">Smartlook API reference</Link>\n    <h1 {...{\n      \"id\": \"supported-versions\"\n    }}>{`Supported versions`}</h1>\n    <p>{`TODO`}</p>\n    <h1 {...{\n      \"id\": \"issue-tracker\"\n    }}>{`Issue tracker`}</h1>\n    <p>{`If you are experiencing any technical difficulties with our SDK feel free to report a issue to our `}<a parentName=\"p\" {...{\n        \"href\": \"\"\n      }}>{`FIXME issue tracker`}</a>{`.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}