{"version":3,"sources":["webpack:///../src/sdk-installation/ios.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","snippets","ruby","parentName","swift","objc","kind","invisibleOn","isMDXComponent"],"mappings":"ygBAQO,IAAMA,EAAe,Q,8MAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,wBADR,wBAGA,kIACA,gHACA,iBAAQ,CACN,GAAM,aADR,aAGA,YAAC,IAAD,CAAMC,SAAU,CACdC,KAAM,qBAGLF,QAAQ,SACX,6CAA4B,mBAAGG,WAAW,KAAQ,CAC9C,KAAQ,0BADgB,yBAA5B,KAGA,iBAAQ,CACN,GAAM,sBADR,sBAGA,sBACE,kBAAIA,WAAW,MAAf,uBAA4C,mBAAGA,WAAW,MAAS,CAC/D,KAAQ,iEADgC,qBAA5C,cAGA,kBAAIA,WAAW,MAAf,sEAEF,iBAAQ,CACN,GAAM,eADR,eAGA,qHAAoG,mBAAGA,WAAW,KAAQ,CACtH,KAAQ,gDADwF,uBAApG,KAGA,gCAAe,0BAAYA,WAAW,KAAvB,eAAf,4BACA,YAAC,IAAD,CAAMF,SAAU,CACdG,MAAO,6BAGPC,KAAM,6CAGLL,QAAQ,SACX,mEACA,YAAC,IAAD,CAAWC,SAAU,CACnBG,MAAO,0OAMPC,KAAM,qMAMLL,QAAQ,cACX,YAAC,IAAD,CAAMC,SAAU,CACdG,MAAO,0OAMPC,KAAM,qMAMLL,QAAQ,SACX,gHACA,8DACA,YAAC,IAAD,CAAOM,KAAK,OAAOC,YAAY,GAAGP,QAAQ,SAA1C,qKAGA,yDACA,sBACE,kBAAIG,WAAW,MAAf,4BACA,kBAAIA,WAAW,MAAf,qDACA,kBAAIA,WAAW,MAAf,oDACA,kBAAIA,WAAW,MAAf,2CACA,kBAAIA,WAAW,MAAf,wCACA,kBAAIA,WAAW,MAAf,mBAEF,kEAAiD,mBAAGA,WAAW,KAAQ,CACnE,KAAQ,6CADqC,2BAAjD,W,4MAOJN,EAAWW,gBAAiB","file":"component---src-sdk-installation-ios-mdx-7eb781b043755e041697.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/nextgen-docs/nextgen-docs/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Code, CodeBlock, TextBlock, Alert, Link } from \"components\";\nimport { usePlatforms } from 'hooks';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"ios-sdk-installation\"\n    }}>{`iOS SDK Installation`}</h1>\n    <p>{`There are several possible ways how to integrate Smartlook SKD into a native iOS (Swift or ObjC project).`}</p>\n    <p>{`Note: if you integrate Smartlook SDK using Segment, please please follow this `}{`[LINK]`}</p>\n    <h2 {...{\n      \"id\": \"cocoapods\"\n    }}>{`Cocoapods`}</h2>\n    <Code snippets={{\n      ruby: `\npod Smartlook\n`\n    }} mdxType=\"Code\" />\n    <p>{`More about Cocoapods `}<a parentName=\"p\" {...{\n        \"href\": \"https://cocoapods.org\"\n      }}>{`https://cocoapods.org`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"manual-integration\"\n    }}>{`Manual Integration`}</h2>\n    <ol>\n      <li parentName=\"ol\">{`Download the latest `}<a parentName=\"li\" {...{\n          \"href\": \"https://sdk.smartlook.com/ios/smartlook-ios-sdk-1.2.5.59.zip\"\n        }}>{`Smartlook iOS SDK`}</a>{` directly.`}</li>\n      <li parentName=\"ol\">{`Unzip the file and add Smartlook.framework to your Xcode project.`}</li>\n    </ol>\n    <h2 {...{\n      \"id\": \"quick-start\"\n    }}>{`Quick Start`}</h2>\n    <p>{`To start recording, you need your unique API key. This can be found in your apps settings in `}<a parentName=\"p\" {...{\n        \"href\": \"https://app.smartlook.com/settings/projects\"\n      }}>{`Smartlook Dashboard`}</a>{`.`}</p>\n    <p>{`In your `}<inlineCode parentName=\"p\">{`AppDelegate`}</inlineCode>{` add among other imports`}</p>\n    <Code snippets={{\n      swift: `\nimport Smartlook\n      `,\n      objc: `\n#import <Smartlook/Smartlook.h>\n      `\n    }} mdxType=\"Code\" />\n    <p>{`and then in the application launch method `}</p>\n    <CodeBlock snippets={{\n      swift: `\nfunc application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -> Bool {\n    \n    Smartlook.setup(key: \"YOUR_API_KEY\")\n    Smartlook.startRecording()\n      `,\n      objc: `\n- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {\n      \n    [Smartlook setupWithKey:];\n    [Smartlook startRecording];\n      `\n    }} mdxType=\"CodeBlock\" />\n    <Code snippets={{\n      swift: `\nfunc application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -> Bool {\n    \n    Smartlook.setup(key: \"YOUR_API_KEY\")\n    Smartlook.startRecording()\n      `,\n      objc: `\n- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {\n      \n    [Smartlook setupWithKey:];\n    [Smartlook startRecording];\n      `\n    }} mdxType=\"Code\" />\n    <p>{`[Note: the following should be in common text included into all SDK installtation docs]`}</p>\n    <p>{`Thats all you need for a quick start.`}</p>\n    <Alert kind=\"info\" invisibleOn=\"\" mdxType=\"Alert\">\nSDK will upload sessions only on WiFi if you want to upload sessions on mobile connections too, you need to enable this in your project setting in the dashboard.\n    </Alert>\n    <p>{`After this basic setup SDK will:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`record your application.`}</li>\n      <li parentName=\"ul\">{`stop itself automatically on application closure.`}</li>\n      <li parentName=\"ul\">{`automatically hide some default sensitive views.`}</li>\n      <li parentName=\"ul\">{`detect basic user gestures and touches.`}</li>\n      <li parentName=\"ul\">{`records install referrer if present.`}</li>\n      <li parentName=\"ul\">{`and much more!`}</li>\n    </ul>\n    <p>{`For any SDK customization please refer to `}<a parentName=\"p\" {...{\n        \"href\": \"/nextgen-docs/api_reference?platform=ios\"\n      }}>{`Smartlook API reference`}</a>{`.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}