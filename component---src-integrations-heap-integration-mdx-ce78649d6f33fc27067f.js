(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{"8eMb":function(n,o,r){"use strict";r.r(o),r.d(o,"_frontmatter",(function(){return d})),r.d(o,"default",(function(){return c}));var e=r("Fcif"),t=r("+I+c"),i=(r("mXGw"),r("/FXl")),s=r("TjRS"),a=r("+8zC"),d=(r("aD51"),{});void 0!==d&&d&&d===Object(d)&&Object.isExtensible(d)&&!d.hasOwnProperty("__filemeta")&&Object.defineProperty(d,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/integrations/heap-integration.mdx"}});var p={_frontmatter:d},l=s.a;function c(n){var o=n.components,r=Object(t.a)(n,["components"]);return Object(i.b)(l,Object(e.a)({},p,r,{components:o,mdxType:"MDXLayout"}),Object(i.b)(a.g,{kind:"title",mdxType:"TextBlock"},"Heap integration"),Object(i.b)("h2",{id:"manual-integration"},"Manual integration"),Object(i.b)("p",null,"Smartlook can be easily integrated into Heap using ",Object(i.b)("inlineCode",{parentName:"p"},"IntegrationListener"),":"),Object(i.b)(a.c,{kind:"example",snippets:{android:{java:'\nSmartlook.registerIntegrationListener(new IntegrationListener() {\n    @Override\n    public void onSessionReady(@NotNull String dashboardSessionUrl) {\n        Map<String, String> props = new HashMap<>();\n        props.put("Session url", dashboardSessionUrl);\n\n        Heap.track("Smartlook session URL", props);\n    }\n\n    @Override\n    public void onVisitorReady(@NotNull String dashboardVisitorUrl) {\n        Map<String, String> props = new HashMap<>();\n        props.put("Smartlook visitor URL", dashboardVisitorUrl);\n\n        Heap.addUserProperties(props);\n    }\n});\n      ',kotlin:'\nSmartlook.registerIntegrationListener(object : IntegrationListener {\n    override fun onSessionReady(dashboardSessionUrl: String) {\n        val props = HashMap<String, String>();\n        props.put("Session url", dashboardSessionUrl)\n\n        Heap.track("Smartlook session URL", props)\n    }\n\n    override fun onVisitorReady(dashboardVisitorUrl: String) {\n        val props = new HashMap<String,String>()\n        props.put("Smartlook visitor URL", dashboardVisitorUrl)\n\n        Heap.addUserProperties(props)\n    }\n})\n      '},cocos:{java:'\nSmartlook.registerIntegrationListener(new IntegrationListener() {\n    @Override\n    public void onSessionReady(@NotNull String dashboardSessionUrl) {\n        Map<String, String> props = new HashMap<>();\n        props.put("Session url", dashboardSessionUrl);\n\n        Heap.track("Smartlook session URL", props);\n    }\n\n    @Override\n    public void onVisitorReady(@NotNull String dashboardVisitorUrl) {\n        Map<String, String> props = new HashMap<>();\n        props.put("Smartlook visitor URL", dashboardVisitorUrl);\n\n        Heap.addUserProperties(props);\n    }\n});\n      ',kotlin:'\nSmartlook.registerIntegrationListener(object : IntegrationListener {\n    override fun onSessionReady(dashboardSessionUrl: String) {\n        val props = HashMap<String, String>();\n        props.put("Session url", dashboardSessionUrl)\n\n        Heap.track("Smartlook session URL", props)\n    }\n\n    override fun onVisitorReady(dashboardVisitorUrl: String) {\n        val props = new HashMap<String,String>()\n        props.put("Smartlook visitor URL", dashboardVisitorUrl)\n\n        Heap.addUserProperties(props)\n    }\n})\n      '},cordova:{javascript:'\nSmartlook.registerIntegrationListener({\n  onSessionReady: function (dashboardSessionUrl) { \n    heap.track(\n        "Smartlook session URL",\n        {"session_url": dashboardSessionUrl});\n  },\n  onVisitorReady: function (dashboardVisitorUrl) { \n    heap.addUserProperties({\'smartlook_visitor_url\': dashboardVisitorUrl});\n  }\n});\n      '},ionic:{typescript:'\nsmartlook.registerIntegrationListener(new SmartlookIntegrationListener(\n  function (dashboardSessionUrl) { \n    heap.track(\n        "Smartlook session URL",\n        {"session_url": dashboardSessionUrl})\n  },\n  function (dashboardVisitorUrl) { \n    heap.addUserProperties({\'smartlook_visitor_url\': dashboardVisitorUrl})\n  }\n));\n      '},ios:{swift:"\npublic class let dashboardSessionURLChanged: NSNotification.Name\npublic class let dashboardVisitorURLChanged: NSNotification.Name\n      ","objective-c":"\nNSNotificationName const SLDashboardSessionURLChangedNotification;\nNSNotificationName const SLDashboardVisitorURLChangedNotification;\n      "},flutter:{dart:"\nclass CustomIntegrationListener implements IntegrationListener {\n  void onSessionReady(String dashboardSessionUrl) {\n      //todo\n  }\n\n\n  void onVisitorReady(String dashboardVisitorUrl) {\n    //todo\n  }\n}\n\n\nSmartlook.registerIntegrationListener(new CustomIntegrationListener());\n      "},unity:{csharp:"\npublic class IntegrationListener : SmartlookUnity.IntegrationListener\n{\n    public override void onSessionReady(string dashboardSessionUrl)\n    {\n        //todo\n    }\n\n\n    public override void onVisitorReady(string dashboardVisitorUrl)\n    {\n        //todo\n    }\n}\n\n\nSmartlookUnity.Smartlook.RegisterIntegrationListener(new IntegrationListener());\n"},react:{javascript:'\nSmartlook.registerIntegrationListener({\n  onSessionReady: function (dashboardSessionUrl) { \n    heap.track(\n        "Smartlook session URL",\n        {"session_url": dashboardSessionUrl});\n);\n  },\n  onVisitorReady: function (dashboardVisitorUrl) { \n    heap.addUserProperties({\'smartlook_visitor_url\': dashboardVisitorUrl});\n  }\n});\n      '}},mdxType:"CodeBlock"}),Object(i.b)(a.g,{kind:"note",mdxType:"TextBlock"},"\nFull Heap API documentation can be found on the [official website](https://developers.heap.io/reference).\n"),Object(i.b)("h2",{id:"automatic-integration"},"Automatic integration"),Object(i.b)("p",null,"Automatic Heap integration comming soon."))}void 0!==c&&c&&c===Object(c)&&Object.isExtensible(c)&&!c.hasOwnProperty("__filemeta")&&Object.defineProperty(c,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/integrations/heap-integration.mdx"}}),c.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-integrations-heap-integration-mdx-ce78649d6f33fc27067f.js.map