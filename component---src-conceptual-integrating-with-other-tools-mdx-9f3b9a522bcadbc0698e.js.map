{"version":3,"sources":["webpack:///../src/conceptual/integrating-with-other-tools.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","kind","parentName","snippets","ios","swift","to","android","java","kotlin","cocos","unity","csharp","cordova","javascript","ionic","typescript","isMDXComponent"],"mappings":"mQAQaA,G,oBAAe,S,iOAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,YAAC,IAAD,CAAWC,KAAK,QAAQD,QAAQ,aAAhC,gCACA,qBAAG,kBAAIE,WAAW,KAAf,+EACH,mOACA,YAAC,IAAD,CAAWF,QAAQ,aAAnB,gZAGA,YAAC,IAAD,CAAWC,KAAK,YAAYD,QAAQ,aAApC,mFAGA,gJACA,iBAAQ,CACN,GAAM,uBADR,uBAGA,0TACA,YAAC,IAAD,CAAWC,KAAK,UAAUE,SAAU,CAClCC,IAAK,CACHC,MAAO,+KAIP,2MAKDL,QAAQ,cACX,YAAC,IAAD,CAAMM,GAAG,uCAAuCN,QAAQ,QAAxD,6BA9BK,IA+BL,iBAAQ,CACN,GAAM,uBADR,uBAGA,8MACA,YAAC,IAAD,CAAWC,KAAK,UAAUE,SAAU,CAClCI,QAAS,CACPC,KAAM,gJAINC,OAAQ,4IAKVC,MAAO,CACLF,KAAM,gJAINC,OAAQ,4IAKVE,MAAO,CACLC,OAAQ,sKAKVC,QAAS,CACPC,WAAY,kKAQdC,MAAO,CACLC,WAAY,yJAMdZ,IAAK,CACHC,MAAO,mJAIP,kLAKDL,QAAQ,cACX,YAAC,IAAD,CAAMM,GAAG,uCAAuCN,QAAQ,QAAxD,6BAzFK,U,+NA8FTH,EAAWoB,gBAAiB","file":"component---src-conceptual-integrating-with-other-tools-mdx-9f3b9a522bcadbc0698e.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/nextgen-docs/nextgen-docs/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Code, CodeBlock, TextBlock, Link, MD } from \"components\";\nimport { usePlatforms } from 'hooks';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <TextBlock kind='title' mdxType=\"TextBlock\">Integrating with Other Tools</TextBlock>\n    <p><em parentName=\"p\">{`This section shows how to integrate Smartlook with other analytical tools.`}</em></p>\n    <p>{`It is a typical use-case that an app uses several specialized 3rd party libraries to cover various aspects of the analytics, and it is an advantage when it is possible to integrate these tools together.`}</p>\n    <TextBlock mdxType=\"TextBlock\">{`\nIn order to integrate Smartlook recordings with other tools, Smartlook publishes two URLs that point to the currently recorded session, and the current user in Smartlook dashboard. Smartlook also notifies the hosting app whenever one of the integration URLs changes. The notification mechanism heavily depends on the platform (see <Link to=\"/api_reference#integrations\">API Reference</Link>).\n`}</TextBlock>\n    <TextBlock kind=\"important\" mdxType=\"TextBlock\">{`\nThe integration URLs are accessible only to the authorized Smartlook users.\n`}</TextBlock>\n    <p>{`The integration is then made by sending these URLs to the other tools, e.g., as custom parameters of their own objects.`}</p>\n    <h1 {...{\n      \"id\": \"current-session-url\"\n    }}>{`Current Session URL`}</h1>\n    <p>{`The Smartlook method that publishes dashboard session URL takes a boolean flag if the current timestamp should be included in the URL. With this parameter, Smartlook begins playback of the session at the indicated moment. This comes in handy when the URL is attached to a particular event.`}</p>\n    <CodeBlock kind=\"example\" snippets={{\n      ios: {\n        swift: `\nlet currentSmartlookSessionURL = Smartlook.getDashboardSessionURL(withCurrentTimestamp: true)\nanotherToolEvent.setParameter(\"SmartlookURL\", currentSmartlookSessionURL)\n`,\n        'objective-c': `\nNSURL *currentSmartlookSessionURL = [Smartlook getDashboardSessionURLWithCurrentTimestamp:YES];\n[anotherToolEvent setParamValue:currentSmartlookSessionURL forKey:@\"SmartlookURL\"];\n`\n      }\n    }} mdxType=\"CodeBlock\" />\n    <Link to=\"/api_reference#dashboard-session-url\" mdxType=\"Link\">Session URL API Reference</Link>.\n    <h1 {...{\n      \"id\": \"current-visitor-url\"\n    }}>{`Current Visitor URL`}</h1>\n    <p>{`Visitor URL points to a Dashboard page that wrapps the visitor info (their sessions &c.). This URL may change during the app run are result of user identification via Smartlook SDK.`}</p>\n    <CodeBlock kind=\"example\" snippets={{\n      android: {\n        java: `\nString dashboardVisitorURL = Smartlook.getDashboardVisitorUrl();\nAnotherTool.setUserProperty(\"SmartlookURL\", dashboardVisitorUrl);\n      `,\n        kotlin: `\nval dashboardVisitorURL = Smartlook.getDashboardVisitorUrl()\nAnotherTool.setUserProperty(\"SmartlookURL\", dashboardVisitorUrl)\n      `\n      },\n      cocos: {\n        java: `\nString dashboardVisitorURL = Smartlook.getDashboardVisitorUrl();\nAnotherTool.setUserProperty(\"SmartlookURL\", dashboardVisitorUrl);\n      `,\n        kotlin: `\nval dashboardVisitorURL = Smartlook.getDashboardVisitorUrl()\nAnotherTool.setUserProperty(\"SmartlookURL\", dashboardVisitorUrl)\n      `\n      },\n      unity: {\n        csharp: `\n      string dashboardVisitorURL = SmartlookUnity.Smartlook.GetDashboardVisitorUrl();\nAnotherTool.setUserProperty(\"SmartlookURL\", dashboardVisitorUrl);\n      `\n      },\n      cordova: {\n        javascript: `\n Smartlook.getDashboardVisitorUrl(\n  function(dashboardVisitorUrl) {\n    AnotherTool.setUserProperty(\"SmartlookURL\", dashboardVisitorUrl);\n  }\n)\n      `\n      },\n      ionic: {\n        typescript: `\nsmartlook.getDashboardVisitorUrl().then((dashboardVisitorUrl) => {\n  AnotherTool.setUserProperty(\"SmartlookURL\", dashboardVisitorUrl)\n});\n      `\n      },\n      ios: {\n        swift: `\nlet currentSmartlookVisitorURL = Smartlook.getDashboardVisitorURL()\nAnotherTool.setUserProperty(\"SmartlookURL\", currentSmartlookVisitorURL)\n`,\n        'objective-c': `\nNSURL *currentSmartlookVisitorURL = [Smartlook getDashboardVisitorURL];\n[AnotherTool setUserParamValue:currentSmartlookVisitorURL forKey:@\"SmartlookURL\"];\n`\n      }\n    }} mdxType=\"CodeBlock\" />\n    <Link to=\"/api_reference#dashboard-visitor-url\" mdxType=\"Link\">Visitor URL API Reference</Link>.\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}