{"version":3,"sources":["webpack:///../src/integrations/heap-integration.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","kind","parentName","snippets","android","java","kotlin","cocos","cordova","javascript","ionic","typescript","ios","swift","flutter","dart","unity","csharp","react","isMDXComponent"],"mappings":"sQAOaA,G,UAAe,S,uNAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,YAAC,IAAD,CAAWC,KAAK,QAAQD,QAAQ,aAAhC,oBACA,iBAAQ,CACN,GAAM,sBADR,sBAGA,2EAA0D,0BAAYE,WAAW,KAAvB,uBAA1D,KACA,YAAC,IAAD,CAAWD,KAAK,UAAUE,SAAU,CAClCC,QAAS,CACPC,KAAM,slBAgBNC,OAAQ,+hBAeVC,MAAO,CACLF,KAAM,slBAgBNC,OAAQ,+hBAeVE,QAAS,CACPC,WAAY,iWAadC,MAAO,CACLC,WAAY,+VAadC,IAAK,CACHC,MAAO,+IAIP,kKAKFC,QAAS,CACPC,KAAM,gTAcRC,MAAO,CACLC,OAAQ,mXAiBVC,MAAO,CACLT,WAAY,sWAcbT,QAAQ,cACX,YAAC,IAAD,CAAWC,KAAK,OAAOD,QAAQ,aAA/B,iHAGA,iBAAQ,CACN,GAAM,yBADR,yBAGA,uE,qNAKJH,EAAWsB,gBAAiB","file":"component---src-integrations-heap-integration-mdx-ce78649d6f33fc27067f.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/nextgen-docs/nextgen-docs/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { CodeBlock, TextBlock } from \"components\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <TextBlock kind=\"title\" mdxType=\"TextBlock\">Heap integration</TextBlock>\n    <h2 {...{\n      \"id\": \"manual-integration\"\n    }}>{`Manual integration`}</h2>\n    <p>{`Smartlook can be easily integrated into Heap using `}<inlineCode parentName=\"p\">{`IntegrationListener`}</inlineCode>{`:`}</p>\n    <CodeBlock kind=\"example\" snippets={{\n      android: {\n        java: `\nSmartlook.registerIntegrationListener(new IntegrationListener() {\n    @Override\n    public void onSessionReady(@NotNull String dashboardSessionUrl) {\n        Map<String, String> props = new HashMap<>();\n        props.put(\"Session url\", dashboardSessionUrl);\\n\n        Heap.track(\"Smartlook session URL\", props);\n    }\\n\n    @Override\n    public void onVisitorReady(@NotNull String dashboardVisitorUrl) {\n        Map<String, String> props = new HashMap<>();\n        props.put(\"Smartlook visitor URL\", dashboardVisitorUrl);\\n\n        Heap.addUserProperties(props);\n    }\n});\n      `,\n        kotlin: `\nSmartlook.registerIntegrationListener(object : IntegrationListener {\n    override fun onSessionReady(dashboardSessionUrl: String) {\n        val props = HashMap<String, String>();\n        props.put(\"Session url\", dashboardSessionUrl)\\n\n        Heap.track(\"Smartlook session URL\", props)\n    }\\n\n    override fun onVisitorReady(dashboardVisitorUrl: String) {\n        val props = new HashMap<String,String>()\n        props.put(\"Smartlook visitor URL\", dashboardVisitorUrl)\\n\n        Heap.addUserProperties(props)\n    }\n})\n      `\n      },\n      cocos: {\n        java: `\nSmartlook.registerIntegrationListener(new IntegrationListener() {\n    @Override\n    public void onSessionReady(@NotNull String dashboardSessionUrl) {\n        Map<String, String> props = new HashMap<>();\n        props.put(\"Session url\", dashboardSessionUrl);\\n\n        Heap.track(\"Smartlook session URL\", props);\n    }\\n\n    @Override\n    public void onVisitorReady(@NotNull String dashboardVisitorUrl) {\n        Map<String, String> props = new HashMap<>();\n        props.put(\"Smartlook visitor URL\", dashboardVisitorUrl);\\n\n        Heap.addUserProperties(props);\n    }\n});\n      `,\n        kotlin: `\nSmartlook.registerIntegrationListener(object : IntegrationListener {\n    override fun onSessionReady(dashboardSessionUrl: String) {\n        val props = HashMap<String, String>();\n        props.put(\"Session url\", dashboardSessionUrl)\\n\n        Heap.track(\"Smartlook session URL\", props)\n    }\\n\n    override fun onVisitorReady(dashboardVisitorUrl: String) {\n        val props = new HashMap<String,String>()\n        props.put(\"Smartlook visitor URL\", dashboardVisitorUrl)\\n\n        Heap.addUserProperties(props)\n    }\n})\n      `\n      },\n      cordova: {\n        javascript: `\nSmartlook.registerIntegrationListener({\n  onSessionReady: function (dashboardSessionUrl) { \n    heap.track(\n        \"Smartlook session URL\",\n        {\"session_url\": dashboardSessionUrl});\n  },\n  onVisitorReady: function (dashboardVisitorUrl) { \n    heap.addUserProperties({'smartlook_visitor_url': dashboardVisitorUrl});\n  }\n});\n      `\n      },\n      ionic: {\n        typescript: `\nsmartlook.registerIntegrationListener(new SmartlookIntegrationListener(\n  function (dashboardSessionUrl) { \n    heap.track(\n        \"Smartlook session URL\",\n        {\"session_url\": dashboardSessionUrl})\n  },\n  function (dashboardVisitorUrl) { \n    heap.addUserProperties({'smartlook_visitor_url': dashboardVisitorUrl})\n  }\n));\n      `\n      },\n      ios: {\n        swift: `\npublic class let dashboardSessionURLChanged: NSNotification.Name\npublic class let dashboardVisitorURLChanged: NSNotification.Name\n      `,\n        'objective-c': `\nNSNotificationName const SLDashboardSessionURLChangedNotification;\nNSNotificationName const SLDashboardVisitorURLChangedNotification;\n      `\n      },\n      flutter: {\n        dart: `\nclass CustomIntegrationListener implements IntegrationListener {\n  void onSessionReady(String dashboardSessionUrl) {\n      //todo\n  }\n\\n\n  void onVisitorReady(String dashboardVisitorUrl) {\n    //todo\n  }\n}\n\\n\nSmartlook.registerIntegrationListener(new CustomIntegrationListener());\n      `\n      },\n      unity: {\n        csharp: `\npublic class IntegrationListener : SmartlookUnity.IntegrationListener\n{\n    public override void onSessionReady(string dashboardSessionUrl)\n    {\n        //todo\n    }\n\\n\n    public override void onVisitorReady(string dashboardVisitorUrl)\n    {\n        //todo\n    }\n}\n\\n\nSmartlookUnity.Smartlook.RegisterIntegrationListener(new IntegrationListener());\n`\n      },\n      react: {\n        javascript: `\nSmartlook.registerIntegrationListener({\n  onSessionReady: function (dashboardSessionUrl) { \n    heap.track(\n        \"Smartlook session URL\",\n        {\"session_url\": dashboardSessionUrl});\n);\n  },\n  onVisitorReady: function (dashboardVisitorUrl) { \n    heap.addUserProperties({'smartlook_visitor_url': dashboardVisitorUrl});\n  }\n});\n      `\n      }\n    }} mdxType=\"CodeBlock\" />\n    <TextBlock kind=\"note\" mdxType=\"TextBlock\">{`\nFull Heap API documentation can be found on the [official website](https://developers.heap.io/reference).\n`}</TextBlock>\n    <h2 {...{\n      \"id\": \"automatic-integration\"\n    }}>{`Automatic integration`}</h2>\n    <p>{`Automatic Heap integration comming soon.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}