{"version":3,"sources":["webpack:///../src/conceptual/what-and-how-is-recorded.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","kind","parentName","to","isMDXComponent"],"mappings":"oQAQaA,G,oBAAe,S,6NAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,YAAC,IAAD,CAAWC,KAAK,QAAQD,QAAQ,aAAhC,iEACA,qBAAG,kBAAIE,WAAW,KAAf,4IACH,6EACA,sBACE,kBAAIA,WAAW,MAAf,6CACA,kBAAIA,WAAW,MAAf,uDAEF,uFACA,sBACE,kBAAIA,WAAW,MAAf,kHACA,kBAAIA,WAAW,MAAf,8HAEF,wOACA,gQACA,iBAAQ,CACN,GAAM,oBADR,oBAGA,qTACA,YAAC,IAAD,CAAMC,GAAG,uCAAuCH,QAAQ,QAAxD,4BAtBK,IAuBL,iHAAgG,sBAAQE,WAAW,KAAnB,UAAhG,wOAAmX,sBAAQA,WAAW,KAAnB,aAAnX,4BACA,YAAC,IAAD,CAAMC,GAAG,0BAA0BH,QAAQ,QAA3C,iCAxBK,IAyBL,iBAAQ,CACN,GAAM,kBADR,kBAGA,uSACA,kQACA,YAAC,IAAD,CAAMG,GAAG,gEAAgEH,QAAQ,QAAjF,6BA9BK,U,2NAmCTH,EAAWO,gBAAiB","file":"component---src-conceptual-what-and-how-is-recorded-mdx-85550e8b8ee9674570f3.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/nextgen-docs/nextgen-docs/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Code, CodeBlock, TextBlock, Alert, Link, MD } from \"components\";\nimport { usePlatforms } from 'hooks';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <TextBlock kind='title' mdxType=\"TextBlock\">{`What is recorded and how: Screen Recording and Event Tracking`}</TextBlock>\n    <p><em parentName=\"p\">{`This section describes what different kinds of data Smartlook SDK records and how the level of recorded data details can be controlled.`}</em></p>\n    <p>{`Smartlook records two interconnected types of data: `}</p>\n    <ul>\n      <li parentName=\"ul\">{`a video of the app UI as the user sees it`}</li>\n      <li parentName=\"ul\">{`metadata about the user interaction with the app. `}</li>\n    </ul>\n    <p>{`These two information sets are then used for two main purposes`}</p>\n    <ul>\n      <li parentName=\"ul\">{`to replay the user sessions in the form of a screen recording video with visual indication of user interaction`}</li>\n      <li parentName=\"ul\">{`to provide material for analytical functions that helps you with understanding the bigger picture of your users behaviour`}</li>\n    </ul>\n    <p>{`While it may seem that more data is always better, there are trade-offs between the amount of recorded data and, among else, technological limits of mobile devices and, most importantly, your usersâ€™ privacy.`}</p>\n    <p>{`Smartlook defaults offer a balanced setting and a robust protection of user privacy that are suitable for a typical mobile app. To tweak the settings to be best suited for your particular app, there are several areas to look after.`}</p>\n    <h1 {...{\n      \"id\": \"screen-recording\"\n    }}>{`Screen Recording`}</h1>\n    <p>{`Screen recording quality is primarily a technologic decision, with an obvious trade-off. The crisper and smoother the video, the higher the Smartlook footprint in terms of CPU, battery and memory usage, and the more data is generated and transported over the network. For details, see`}</p>\n    <Link to=\"/conceptual/screen-recording-quality\" mdxType=\"Link\">Screen Recording Quality</Link>.\n    <p>{`The level of recorded visual details is given by the rendering mode. The default mode is `}<strong parentName=\"p\">{`native`}</strong>{`, when Smartlook takes screenshots of the device screen, removes sensitive data from it and then composes video out of it. Alternative rendering modes construct the video recording by sketching the UI structure in one of several `}<strong parentName=\"p\">{`wireframe`}</strong>{` styles. For detail, see`}</p>\n    <Link to=\"api_reference#rendering\" mdxType=\"Link\">Rendering Modes documentation</Link>.\n    <h1 {...{\n      \"id\": \"event-tracking\"\n    }}>{`Event Tracking`}</h1>\n    <p>{`Smartlook tracks two interconnected types of events. User interaction events, i.e., finger touches, gestures and such, and analytics events, by which Smartlook understands button clicks, navigation between screens and similar events that initialize an action in the app.`}</p>\n    <p>{`The default setting is to track all these events (with exception of events on the keyboard, for obvious user privacy reasons). If this is not desired, it is possible to limit the kind of tracked events using event tracking modes, see`}</p>\n    <Link to=\"/conceptual/handling-sensitive-data#handling-sensitive-events\" mdxType=\"Link\">Handling Sensitive Events</Link>.\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}